install.packages( 'stringdist' )
?loess
library(DMwR)
ds = algae  # data set contains observations on 11 variables on the concentration levels of 7 harmful algae
?algae
# choose a variable to analyse
library( GGally )
ggpairs( data = ds , columns = c( 4: ncol(ds)  )  )
# histogram for PO4
hist( ds$PO4 )
h <- hist ( ds$PO4 , right = FALSE, plot = FALSE )
h
df <- cbind( right_break = h$breaks[-1] , mid_point = h$mids , n = h$counts )
df
library(TH.data)
data("GlaucomaM", package = "TH.data")
ds <- GlaucomaM
library(GGally)
ggpairs ( ds [ , 10:15] )
plot ( ds$abrg )
plot ( density ( ds$abrg ) )
## a package that provides a method that gives the optimal lambda
library(EnvStats)
EnvStats::boxcox( ds$abrg , optimize = TRUE)
bc.res <- EnvStats::boxcox( ds$abrg , optimize = TRUE)
## transforms the initial var a plots the density function
new_var <- (ds$abrg^ bc.res$lambda -1 ) / bc.res$lambda
plot ( density ( new_var ) )
setwd("C:/my_files/01_Working_dir/00_aulas/VPDA/00_course_slides/datasets/fonts_3/charming")
library( extrafont )
fonts()
font_import( path = '.')
fonts()
## define a function with our theme
my_theme <- function () {
# define variables
font_color <-   "blue4"
# the base theme we are going to modify
theme_minimal( base_size = 12 ,  base_family = "A Charming Font" ) %+replace%
theme(
plot.title = element_text(  size = rel(1.5)  , hjust=0.5, color = font_color , face = "bold" )
)
}
######################################3
#read the Dataset from
# https://raw.githubusercontent.com/dssg-pt/covid19pt-data/master/data.csv
ds <- data <- read.csv("https://raw.githubusercontent.com/dssg-pt/covid19pt-data/master/data.csv", na.strings = "", fileEncoding = "UTF-8-BOM")
## packages
library( tidyverse); library( scales ) ; library (lubridate ) ; library( extrafont )
# select columns, rename, set the date format and put in vertical form
ds1 <- ds %>%
select (data, confirmados_arsnorte, confirmados_arscentro, confirmados_arslvt, confirmados_arsalentejo, confirmados_arsalgarve ) %>%
rename ( norte = confirmados_arsnorte, centro=confirmados_arscentro, lisboavt=confirmados_arslvt, alentejo = confirmados_arsalentejo, algarve = confirmados_arsalgarve ) %>%
mutate ( data = as.Date( data , format("%d-%m-%Y" ) ) ) %>%
# variable that is TRUE for Sundays
mutate ( is_sunday = if_else( wday( data) == 1 , TRUE , FALSE  )  )   %>%
gather ( region, cases , 2:6 )
p <- ggplot ( data = ds1, aes( x = data , y = cases, color = region ) )
p <- p + geom_line ( size = 2 )
p <- p + geom_point (  aes( shape = is_sunday , size = is_sunday , fill = is_sunday ) )
p <- p + guides  ( color = guide_legend( '') )
p <- p + xlab( "date of reporting" )  +  ylab( "total number of cases")
p <- p + scale_x_date( date_breaks = "15 day", date_labels =  "%d %b")
p <- p + scale_y_continuous( limits = c(0, max( ds1$cases )  ), breaks = seq(0 , max( ds1$cases ) , by=25000) , labels = unit_format( unit = "k", scale = 1e-3 , accuracy = 1))
p <- p + labs( title = "covid-19 cases per region" )
p <- p + labs( subtitle = paste( "printed in:" , today(), " - cases up to" , max(ds1$data)  ) )
p2 <- p + scale_shape_manual( values = c( "TRUE" = 21,  "FALSE" = 23 ) )
# second the size for geom_point
p2 <- p2 + scale_size_manual( values = c( "TRUE" = 4,  "FALSE" = 2 ) )
library ( viridis )
p2 <- p2 +  scale_fill_viridis(discrete = TRUE)
p2
p2 + my_theme()
p2 + my_theme()
fonts()
my_theme <- function () {
# define variables
font_color <-   "blue4"
# the base theme we are going to modify
theme_minimal( base_size = 12 ,  base_family = "A Charming Font" ) %+replace%
theme(
plot.title = element_text(  size = rel(1.5)  , hjust=0.5, color = font_color , face = "bold" )
)
}
p2 + my_theme()
my_theme <- function () {
# define variables
font_color <-   "blue4"
# the base theme we are going to modify
theme_minimal( base_size = 12 ,  base_family = "Grandstander" ) %+replace%
theme(
plot.title = element_text(  size = rel(1.5)  , hjust=0.5, color = font_color , face = "bold" )
)
}
p2 + my_theme()
my_theme <- function () {
# define variables
font_color <-   "blue4"
# the base theme we are going to modify
theme_minimal( base_size = 12 ,  base_family = "A Charming Font" ) %+replace%
theme(
plot.title = element_text(  size = rel(1.5)  , hjust=0.5, color = font_color , face = "bold" )
)
}
p2 + my_theme()
loadfonts(device = "win", quiet = TRUE)
p2 + my_theme()
fonts()
setwd("C:/my_files/01_Working_dir/00_aulas/VPDA/00_course_slides/datasets/fonts_3/murderer")
font_import( path = '.')
loadfonts(device = "win", quiet = TRUE)
fonts()
my_theme <- function () {
# define variables
font_color <-   "blue4"
# the base theme we are going to modify
theme_minimal( base_size = 12 ,  base_family = "youMurderer" ) %+replace%
theme(
plot.title = element_text(  size = rel(1.5)  , hjust=0.5, color = font_color , face = "bold" )
)
}
p2 + my_theme()
loadfonts(device = "win", quiet = TRUE)
my_theme <- function () {
# define variables
font_color <-   "blue4"
# the base theme we are going to modify
theme_minimal( base_size = 12 ,  base_family = "YouMurderer BB" ) %+replace%
theme(
plot.title = element_text(  size = rel(1.5)  , hjust=0.5, color = font_color , face = "bold" )
)
}
loadfonts(device = "win", quiet = TRUE)
p2 + my_theme()
font_import( path = '.')
fonts()
setwd("C:/my_files/01_Working_dir/00_aulas/VPDA/00_course_slides/datasets/fonts_3")
font_import(path='.')
fonts()
my_theme <- function () {
# define variables
font_color <-   "blue4"
# the base theme we are going to modify
theme_minimal( base_size = 12 ,  base_family = "Thor" ) %+replace%
theme(
plot.title = element_text(  size = rel(1.5)  , hjust=0.5, color = font_color , face = "bold" )
)
}
p2 + my_theme()
loadfonts(device = "win", quiet = TRUE)
p2 + my_theme()
## define a function with our theme
library ( extrafont )
my_theme <- function () {
# define variables
font_color <-   "blue4"
# the base theme we are going to modify
theme_minimal( base_size = 12 ,  base_family = "Comic Sans MS" ) %+replace%
theme(
# configure title
plot.title = element_text(  size = rel(1.5)  , hjust=0.5, color = font_color , face = "bold" )  ,
# configure subtitle
plot.subtitle = element_text( size = rel(1.2), hjust=0.5 , color ="red", lineheight= 1)
)
}
## define a function with our theme
library ( extrafont )
my_theme <- function () {
# define variables
font_color <-   "blue4"
# the base theme we are going to modify
theme_minimal( base_size = 12 ,  base_family = "serif" ) %+replace%
theme(
# configure title
plot.title = element_text(  size = rel(1.5)  , hjust=0.5, color = font_color , face = "bold" )  ,
# configure subtitle
plot.subtitle = element_text( size = rel(1.2), hjust=0.5 , color ="red", lineheight= 1)
)
}
p2  + my_theme()
## define a function with our theme
library ( extrafont )
my_theme <- function () {
# define variables
font_color <-   "blue4"
# the base theme we are going to modify
theme_minimal( base_size = 12 ,  base_family = "serif" ) %+replace%
theme(
# configure title
plot.title = element_text(  size = rel(1.5)  , hjust=0.5, color = font_color , face = "bold" )  ,
# configure subtitle
plot.subtitle = element_text( size = rel(1.2), hjust=0.5 , color = "blue3", lineheight= 1)
)
}
p2  + my_theme()
fonts()
my_theme <- function () {
font_color <-   "blue4"
theme_minimal( base_size = 12 ,  base_family = "Comic Sans MS" ) %+replace%
theme(
plot.title = element_text(  size = rel(1.5)  , hjust=0.5, color = font_color , face = "bold" )  ,
plot.subtitle = element_text( size = rel(1.2), hjust=0.5 , color = "blue3", lineheight= 1)
)
}
p2  + my_theme()
setwd("C:/my_files/01_Working_dir/00_aulas/VPDA/00_course_slides/datasets/fonts/airstrike")
font_import(path='.')
fonts()
loadfonts(device = "win", quiet = TRUE)
my_theme <- function () {
font_color <-   "blue4"
theme_minimal( base_size = 12 ,  base_family = "Airstrike" ) %+replace%
theme(
plot.title = element_text(  size = rel(1.5)  , hjust=0.5, color = font_color , face = "bold" )  ,
plot.subtitle = element_text( size = rel(1.2), hjust=0.5 , color = "blue3", lineheight= 1)
)
}
p2 + my_theme()
p2 + my_theme() + geom_label( x = "2020-04-08", y = 50000 , label = "need to choose better colors!!!" )
p2 + my_theme() + geom_label( x = as.Date("2020-04-08"), y = 50000 , label = "need to choose better colors!!!" )
p2 + my_theme() + geom_label( x = as.Date("2020-04-08"), y = 50000 , label = "need to choose better colors!!!", hjust= 0 )
p2 + my_theme() +
geom_label( x = "2020-04-08", y = 50000 , label = "need to choose better colors!!!" , hjust = 0 )
p2 + my_theme() +
geom_label( x = as.Date("2020-04-08"), y = 50000 , label = "need to choose better colors!!!" , hjust = 0 )
p2 + my_theme() +
geom_label( x = as.Date("2020-04-08"), y = 50000 , label = "need to choose better colors!!!" , hjust = 0 )
p2 + my_theme() +
geom_label( x = as.Date("2020-04-08"), y = 50000 , label = "need to choose better colors!!!"  )
p2 + my_theme() +
annotate("label", x = as.Date("2020-04-08"), y = 50000 , label = "need to choose better colors!!!"  )
p2 + my_theme() +
annotate( 'label' , x = as.Date("2020-04-08"), y = 50000 , label = "need to choose better colors!!!" , hjust = 0 )
my_theme <- function () {
font_color <-   "blue4"
theme_minimal( base_size = 12 ,  base_family = "Airstrike" ) +
theme_replace(
plot.title = element_text(  size = rel(1.5)  , hjust=0.5, color = font_color , face = "bold" )  ,
plot.subtitle = element_text( size = rel(1.2), hjust=0.5 , color = "blue3", lineheight= 1)
)
}
p2 + my_theme()
my_theme <- function () {
font_color <-   "blue4"
theme_minimal( base_size = 12 ,  base_family = "Airstrike" ) +
theme_replace(
plot.title = element_text(  size = rel(1.5)  , hjust=0.5, color = font_color , face = "bold" )  ,
plot.subtitle = element_text( size = rel(1.2), hjust=0.5 , color = "blue3", lineheight= 1)
)
}
my_theme <- function () {
font_color <-   "blue4"
theme_minimal( base_size = 12 ,  base_family = "Airstrike" ) +
theme(
plot.title = element_text(  size = rel(1.5)  , hjust=0.5, color = font_color , face = "bold" )  ,
plot.subtitle = element_text( size = rel(1.2), hjust=0.5 , color = "blue3", lineheight= 1)
)
}
p2 + my_theme()
theme_get()
x <- theme_get()
class( x )
str(x)
theme_set ( my_theme() )
p2
theme_update( panel.grid.minor = element_line(colour = "red") )
p2
theme_replace( panel.grid.minor = element_line(colour = "red") )
p2
theme_replace( panel.grid.minor = element_line(linetype = "dashed") )
p2
theme_update( panel.grid.minor = element_line(colour = "red") )
p2
update_geom_defaults("label", list( family = 'Airstrike' ))
p2 + my_theme() +
annotate( 'label' , x = as.Date("2020-04-08"), y = 50000 , label = "need to choose better colors!!!" , hjust = 0 )
theme_get()$text$family
my_theme <- function ( font_size, font_color, font_family ) {
theme_minimal( base_size = font_size ,  base_family = "Airstrike" ) %+replace%
theme(
text = element_text( color = font_color ) ,
plot.title = element_text(  size = rel(1.5)  , hjust=0.5 , face = "bold" )  ,
plot.subtitle = element_text( size = rel(1.2), hjust=0.5 , lineheight= 1)
)
}
## A function to define the theme
my_theme <- function ( font_size, font_color, font_family ) {
theme_minimal( base_size = font_size ,  base_family = "Airstrike" ) %+replace%
theme(
text = element_text( color = font_color ) ,
plot.title = element_text(  size = rel(1.5)  , hjust=0.5 , face = "bold" )  ,
plot.subtitle = element_text( size = rel(1.2), hjust=0.5 , lineheight= 1)
)
}
## A function to set the theme
set_my_theme <- function ( font_size, font_color, font_family ) {
if ( missing(font_size) ) font_size <- 12
if ( missing(out_color) ) out_color <- "blue4"
if ( missing(font_family)  ) back_color <- "Candara"
theme_set( my_theme( font_size , font_color , font_family  )
update_geom_defaults( "label" , list( family = theme_get()$text$family ))
update_geom_defaults( "text" , list( family = theme_get()$text$family ))
}
## A function to define the theme
my_theme <- function ( font_size, font_color, font_family ) {
theme_minimal( base_size = font_size ,  base_family = "Airstrike" ) %+replace%
theme(
text = element_text( color = font_color ) ,
plot.title = element_text(  size = rel(1.5)  , hjust=0.5 , face = "bold" )  ,
plot.subtitle = element_text( size = rel(1.2), hjust=0.5 , lineheight= 1)
)
}
## A function to set the theme
set_my_theme <- function ( font_size, font_color, font_family ) {
if ( missing(font_size) ) font_size <- 12
if ( missing(out_color) ) out_color <- "blue4"
if ( missing(font_family)  ) back_color <- "Candara"
theme_set( my_theme( font_size , font_color , font_family ) )
update_geom_defaults( "label" , list( family = theme_get()$text$family ))
update_geom_defaults( "text" , list( family = theme_get()$text$family ))
}
p2
set_my_theme()
## A function to define the theme
my_theme <- function ( font_size, font_color, font_family ) {
theme_minimal( base_size = font_size ,  base_family = "Airstrike" ) %+replace%
theme(
text = element_text( color = font_color ) ,
plot.title = element_text(  size = rel(1.5)  , hjust=0.5 , face = "bold" )  ,
plot.subtitle = element_text( size = rel(1.2), hjust=0.5 , lineheight= 1)
)
}
## A function to set the theme
set_my_theme <- function ( font_size, font_color, font_family ) {
if ( missing(font_size) ) font_size <- 12
if ( missing(font_color) ) out_color <- "blue4"
if ( missing(font_family)  ) back_color <- "Candara"
theme_set( my_theme( font_size , font_color , font_family ) )
update_geom_defaults( "label" , list( family = theme_get()$text$family ))
update_geom_defaults( "text" , list( family = theme_get()$text$family ))
}
set_my_theme()
my_theme <- function ( font_size, font_color, font_family ) {
theme_minimal( base_size = font_size ,  base_family = "Airstrike" ) %+replace%
theme(
text = element_text( color = font_color ) ,
plot.title = element_text(  size = rel(1.5)  , hjust=0.5 , face = "bold" )  ,
plot.subtitle = element_text( size = rel(1.2), hjust=0.5 , lineheight= 1)
)
}
p2 + my_theme()
p2 + my_theme(12, "red" , "Comics Sans")
p2 + my_theme(12, "red" , "Comics Sans MS")
my_theme <- function ( font_size, font_color, font_family ) {
theme_minimal( base_size = font_size ,  base_family = font_family ) %+replace%
theme(
text = element_text( color = font_color ) ,
plot.title = element_text(  size = rel(1.5)  , hjust=0.5 , face = "bold" )  ,
plot.subtitle = element_text( size = rel(1.2), hjust=0.5 , lineheight= 1)
)
}
p2 + my_theme(12, "red" , "Comics Sans MS")
set_theme (  my_theme(12, "red" , "Comics Sans MS")  )
theme_set (  my_theme(12, "red" , "Comics Sans MS")  )
p2
theme_get()$text$family
my_theme <- function ( font_size, font_color, font_family ) {
theme_minimal( base_size = font_size ,  base_family = font_family ) +
theme(
text = element_text( color = font_color ) ,
plot.title = element_text(  size = rel(1.5)  , hjust=0.5 , face = "bold" )  ,
plot.subtitle = element_text( size = rel(1.2), hjust=0.5 , lineheight= 1)
)
}
theme_get()$text$family
theme_set (  my_theme(12, "red" , "Comics Sans MS")  )
theme_get()$text$family
p2
theme_get()$title$family
theme_get()$text$size
theme_get()$title$size
theme_get()$plot.title$size
theme_get()$title$family
t
theme_set ( theme_minimal() )
theme_get()
## A function to define the theme
my_theme <- function ( font_size, font_color, font_family ) {
theme_minimal( base_size = font_size ,  base_family = font_family ) +
theme(
text = element_text( color = font_color , family = font_family ) ,
plot.title = element_text(  size = rel(1.5)  , hjust=0.5 , face = "bold" )  ,
plot.subtitle = element_text( size = rel(1.2), hjust=0.5 , lineheight= 1)
)
}
p2 + my_theme(12, "red" , "Comics Sans MS")
theme_set (  my_theme(12, "red" , "Comics Sans MS")  )
theme_get()$title$family
theme_get()$plot.title$family
theme_get()$text$family
my_theme <- function ( font_size, font_color, font_family ) {
theme_minimal( base_size = font_size ,  base_family = font_family ) +
theme(
text = element_text( color = font_color , family = font_family ) ,
plot.title = element_text(  size = rel(1.5)  , hjust=0.5 , family = font_family , face = "bold" )  ,
plot.subtitle = element_text( size = rel(1.2), hjust=0.5 , family = font_family , lineheight= 1)
)
}
theme_set (  my_theme(12, "red" , "Comics Sans MS")  )
theme_get()$plot.title$family
p2
fonts()
theme_set (  my_theme(12, "red" , "Comic Sans MS")  )
p2
set_my_theme <- function ( font_size, font_color, font_family ) {
if ( missing(font_size) ) font_size <- 12
if ( missing(font_color) ) out_color <- "blue4"
if ( missing(font_family)  ) back_color <- "Candara"
theme_set( my_theme( font_size , font_color , font_family ) )
update_geom_defaults( "label" , list( family = theme_get()$text$family ))
update_geom_defaults( "text" , list( family = theme_get()$text$family ))
}
set_my_theme(12, "red" , "Comic Sans MS")
p2 +    annotate( 'label' , x = as.Date("2020-04-08"), y = 50000 , label = "need to choose better colors!!!" , hjust = 0 )
set_my_theme(16, "red" , "Candara")
p2 +    annotate( 'label' , x = as.Date("2020-04-08"), y = 50000 , label = "need to choose better colors!!!" , hjust = 0 )
